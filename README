Projet TALN
Analyseur syntaxique et sémantique du français en Prolog

HIVERT Kevin && TOURNIER Jonathan

Nous deux versions du projet (pour la première partie, les 2 suivantes ont été réalisées grâce à la seconde version).
Lors de nos tests nous avons remarqué que l'analyseur était extrêmement lent et nous avons donc voulu le modifié 
afin de corriger ce problème, nous avons remarqué qu'il était possible de faire beaucoup moins de tests sur les 
mots si nous les stockions d'une tout autre façons:

	- Dans la version 1 les mots sont stockés en 3 fichiers, comme pour le TP précédent donc, et lorsque l'on
	vérifie le groupe grammatical d'un mot cela prend beaucoup de temps.

	- Dans la version 2, nous avons donc modifié ceci et stocké les mots de cette manière :
		$groupe_grammatical ($dérivation, $personne, $mot_cannonique, $temps).

	Ceci permet de ne faire que peu de test sur chaque mot et donc de gagner un temps non négligeable, ceci au prix
	de l'espace de stockage puisque pour la V1 le nombre de clauses était de 274.958, pour la V2 ce nombre passe
	à 857.330 soit 3 fois plus.
	Le temps pris pour vérifier une phrase est cependant TRÈS LARGEMENT inférieur, dans la V1 il fallait plus d'une minute pour
	une phrase de 20 mots, alors que dans la V2 le resultat apparait en moins d'une seconde.

Pour les 2 versions les parsers utilisent le dictionnaire :
	http://infolingu.univ-mlv.fr/DonneesLinguistiques/Dictionnaires/telechargement.html

Pour la première version nous avons également utilisé les verbes du TP4 de Kevin, la seconde version récupère les verbes dans
le dico ceci au prix qu'on ne connait plus le temps exact auquel correspond le verbe conjugé mais seulement le mode.
Cependant comme nous ne traitons pas la concordance des temps dans le projet cela n'est pas génant.

Il est à noté qu'on aurait pu garder cette information en repartant des verbes du TP4 et en les mettant sous la forme:
	$groupe_grammatical ($dérivation, $personne, $mot_cannonique, $temps).
Pour nous économiser du temps nous ne l'avons pas fait, mais cela aurait été tout à fait possible.

----

Le projet est donc découpé en plusieurs fichiers, un pour chaque type de mot récupérés dans le dictionnaire,
un pour les mots que nous avons ajoutés à la main car leurs catégories n'étaient pas assez présices dans le dictionnaire
que nous avons parsé, et un pour chaque exercice à réaliser.

La partie 1, vérifie l'accord entre les mots mais pas entre les temps, il est tout à fait possible d'écrire :
	
	"Le garçon qui autrefois deviendra grand."
	ou
	"le chat mange la souris "

Mais on ne peut pas écrire :
	
	"Le lapin mange des petits carottes."

Cette partie permet également de construire l'arbre syntaxique de la phrase si celle si est correcte du point de vue de notre
grammaire :
	?- phrase(A, [le, lapin, mange, des, petites, carottes], []).
	A = phrase(gNComplexe(gNSimple(déterminant(le), noun(lapin))), gV(verb(mange),
		gNComplexe(gNSimple(déterminant(des), adjectif(petites), noun(carottes))))).

Nous avons fait en sorte que les variables non instanciées de PROLOG n'apparaissent pas dans cette arbre, la tâche ne fût pas
tant compliquée que longue, mais le résultat en vallait la peine :-)

Une serie d'exemple est disponible pour cette partie dans le fichier ./Exemple/ex1. Il regroupe des phrase correcte du point
de vue du francais qui sont effectivement reconnue par notre grammaire, ainsi que des phrases non correctes reconnues.


Il y a évidement beaucoup d'erreurs, mais nous les avons autorisé pour pouvoir reconnaitre plus de phrase. Il faudrait
pour pouvoir réduire ce nombre d'erreur avoir une base de connaissance avec des catégories grammaticales plus précises.
Par exemple pour les adverbes, nous ne savons pas si c'est un adverbe de lieu, de temps ou de manière; pour kes verbes,
nous ne savons pas si le verbe est transitif ou intrensitif, et nous ne connaissont pas la catégorie exacte des déterminants.

--

La partie 2 concerne la création d'un arbre sémantique.

blablabla ...